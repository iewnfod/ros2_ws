name: Continuous Integration Check

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
      - ci
    paths:
      - "**.h"
      - "**.cpp"
      - "**cmake"
      - "**CMakeLists.txt"
      - ".clang-tidy"
      - ".github/workflows/ci-check.yaml"
  push:
    branches:
      - master
      - ci
    paths:
      - "**.h"
      - "**.cpp"
      - "**cmake"
      - "**CMakeLists.txt"
      - ".clang-tidy"
      - ".github/workflows/ci-check.yaml"

env:
  package-name: "trolly"

jobs:
  standalone-linux:
    strategy:
      matrix:
        os: [ubuntu-24.04]
    name: Standalone Linux
    runs-on: m2-pc-arc-runner-set
    steps:
      - uses: actions/checkout@v4
        with:
          path: ${{ env.package-name }}
          submodules: 'recursive'

      - name: Add SSH private key and clone dependencies
        run: |
          eval `ssh-agent -s`
          ssh-add - <<< '${{ secrets.M2MACHINE_SSH_PRIVATE_KEY }}'
          cd ${{ env.package-name }}
          ./scripts/clone.sh

      - name: Install apt dependencies
        run: |
          sudo apt-get install -y libgtest-dev

      - name: Configure
        run: |
          cd ${{ env.package-name }}
          mkdir build
          cmake -B build . -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++ -DM2B_CLANG_TIDY_CHECK=ON -DM2B_CLANG_TIDY_WARNINGS_AS_ERRORS=ON -DTROLLY_BUILD_TEST=ON

      - name: Build
        run: |
          cd ${{ env.package-name }}/build
          make -j$(nproc)

      - name: Test
        run: |
          cd ${{ env.package-name }}/build
          ctest
  # standalone-windows:
  #   strategy:
  #     matrix:
  #       os: [windows-2022]
  #       include:
  #         - os: windows-2022
  #           generator: Visual Studio 17 2022
  #   name: Standalone Windows
  #   runs-on: ${{ matrix.os }}
  #   steps:
  #     # Git v2.47.0.windows.1 has a bug that causes problems fetching repositories via SSH: git-for-windows/git#5199
  #     # v2.47.0.windows.1 was rolled out in the 20251015.1.0 Windows Server image release.
  #     # v2.47.0.windows.2 was released today with a fix for the issue, and should be included in the Windows Server runner images ASAP to mitigate user impact
  #     - name: Bump git-for-windows
  #       run: |
  #         Invoke-WebRequest -Uri "https://github.com/git-for-windows/git/releases/download/v2.47.0.windows.2/Git-2.47.0.2-64-bit.exe" -OutFile "${{runner.temp}}/git-for-windows.exe"
  #         Start-Process -Filepath "${{runner.temp}}/git-for-windows.exe" -ArgumentList  @("/VERYSILENT","/NORESTART","/NOCANCEL","/SP-","/CLOSEAPPLICATIONS","/RESTARTAPPLICATIONS","/o:PathOption=CmdTools","/o:BashTerminalOption=ConHost","/o:EnableSymlinks=Enabled","/COMPONENTS=gitlfs") -NoNewWindow -Wait

  #     - uses: actions/checkout@v4
  #       with:
  #         path: ${{ env.package-name }}
  #         submodules: 'recursive'

  #     - name: Add SSH private key and clone dependencies
  #       shell: bash
  #       run: |
  #         mkdir -p $HOME/.ssh
  #         cat << EOF > $HOME/.ssh/known_hosts
  #         github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
  #         EOF
  #         eval `ssh-agent -s`
  #         ssh-add - <<< '${{ secrets.M2MACHINE_SSH_PRIVATE_KEY }}'
  #         cd ${{ env.package-name }}
  #         ./scripts/clone.sh

  #     - name: Configure
  #       shell: bash
  #       run: |
  #         cd ${{ env.package-name }}
  #         mkdir build
  #         cmake -G "${{ matrix.generator }}" -B build -DCMAKE_PREFIX_PATH=../install ${{ env.clang-tidy-args }} -DM2B_BUILD_TEST=OFF

  #     - name: Build
  #       shell: bash
  #       run: |
  #         cd ${{ env.package-name }}
  #         cmake --build build

  #     - name: Test
  #       shell: bash
  #       run: |
  #         cd ${{ env.package-name }}
  #         ctest
  ros:
    name: ROS2 Jazzy (${{ matrix.type }})
    runs-on: m2-pc-arc-runner-set
    strategy:
      matrix:
        type: [normal, clangtidy, tsan, asan] # ubsan
        include:
          - type: clangtidy
            extra-cmake-args: -DM2B_CLANG_TIDY_CHECK_C=ON -DM2B_CLANG_TIDY_CHECK_CXX=ON -DM2B_CLANG_TIDY_CHECK_C_HEADER_FILTER=code/include/.*h$ -DM2B_CLANG_TIDY_CHECK_CXX_HEADER_FILTER=code/include/.*hpp$ -DM2B_CLANG_TIDY_WARNINGS_AS_ERRORS=ON
          - type: tsan
            extra-cmake-args: -DM2B_BUILD_TSAN=ON
          - type: asan
            extra-cmake-args: -DM2B_BUILD_ASAN=ON
          - type: ubsan
            extra-cmake-args: -DM2B_BUILD_UBSAN=ON
    env:
      CCACHE_DIR: "${{ github.workspace }}/.ccache"
    steps:
      - uses: actions/checkout@v4
        with:
          path: ${{ env.package-name }}
          submodules: "recursive"

      - name: Add SSH private key and clone dependencies
        run: |
          eval `ssh-agent -s`
          ssh-add - <<< '${{ secrets.M2MACHINE_SSH_PRIVATE_KEY }}'
          cd ${{ env.package-name }}
          ./scripts/clone.sh

      - uses: actions/cache@v4
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ matrix.ROS_DISTRO }}-${{ matrix.ROS_REPO }}-${{github.run_id}}
          restore-keys: |
            ccache-${{ matrix.ROS_DISTRO }}-${{ matrix.ROS_REPO }}-

      - uses: "m2robocon/industrial_ci@master"
        env:
          ROS_REPO: main
          ROS_DISTRO: jazzy
          DOCKER_IMAGE: m2robocon/dev-base:latest
          DOCKER_RUN_OPTS: -e TSAN_OPTIONS=suppressions=/tmp/tsan_suppressions_file -e LSAN_OPTIONS=suppressions=/tmp/lsan_suppressions_file
          AFTER_INSTALL_TARGET_DEPENDENCIES: |
            cat << EOF > /tmp/tsan_suppressions_file
            ${{ env.tsan-suppressions }}
            EOF
            cat << EOF > /tmp/lsan_suppressions_file
            ${{ env.lsan-suppressions }}
            EOF
          TARGET_CMAKE_ARGS: -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++ -DM2B_BUILD_TEST=ON ${{ matrix.extra-cmake-args }}
